package stx.core.pack;

abstract Fault(Position) from Position{
  public function new(self) this = self;
  inline public function of<E>(data:E,?msg:StdString,?code):Err<E>{
    return new Err(null,__.option(msg),__.option(ERR_(data)),null,this);
  }
  inline public function empty():Err<Dynamic>{
    return new Err(null,Some('ERROR'),null,null,this);
  }
  inline public function any<E>(msg:String):Err<E>{
    return new Err(null,Some(msg),null,null,this);
  }
  inline public function stx<E>(failure:StxFailure<Dynamic>):Err<E>{
    return new Err(null,Some(Std.string(failure)),Some(failure),null,this);
  }
  public function prj():Position{
    return this;
  }
}