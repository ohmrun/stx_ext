package stx.core.head;


typedef Either<L,R>       = haxe.ds.Either<L,R>;



typedef Op<U,B,T>         = stx.core.head.data.Op<U,B,T>;
typedef Logic<T>          = stx.core.head.data.Logic<T>;
typedef Fixpoint<C,D>     = stx.core.head.data.Fixpoint<C,D>;      

typedef Repliable<P>      = stx.core.head.data.Repliable<P>;
typedef Appliable<P,R>    = stx.core.head.data.Appliable<P,R>;
typedef Binomial<P0,P1,R> = stx.core.head.data.Binomial<P0,P1,R>;


//typedef Release Void->T
//typedef Command T->Void
//typedef Execute Void->Option<Error>
//typedef Perform Void->Void
//typedef Attempt T->Chunk<T,E>
//typedef 